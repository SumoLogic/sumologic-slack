AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  create_kms_key:
    Fn::And:
    - Fn::Equals:
      - Ref: AwsKmsKeyARN
      - ''
    - Condition: create_secret
  create_secret:
    Fn::Equals:
    - Ref: CreateSecret
    - 'Yes'
Description: This solution consists of a lambda functions which is used to fetch logs
  from Slack and ingest to Sumo Logic.
Metadata:
  AWS::ServerlessRepo::Application:
    Author: Sumo Logic
    Description: This solution consists of a lambda functions which is used to fetch
      logs from Slack and ingest to Sumo Logic.
    HomePageUrl: https://github.com/SumoLogic/sumologic-slack
    Labels:
    - lambda
    - sumologic
    - serverless
    - Slack
    LicenseUrl: s3://appdevstore/Slack/v1.1.2/5122657d5b9a0d3713e24d3a33eae431
    Name: sumologic-slack
    ReadmeUrl: s3://appdevstore/Slack/v1.1.2/756b485bdd6d5b07ca8a0a75bdc29df9
    SemanticVersion: 1.1.2
    SourceCodeUrl: https://github.com/SumoLogic/sumologic-slack
    SpdxLicenseId: Apache-2.0
Outputs:
  SlackFunction:
    Description: SlackScheduler Function ARN
    Value:
      Fn::GetAtt:
      - SlackFunction
      - Arn
Parameters:
  AwsKmsKeyARN:
    Default: ''
    Description: Please provide an existing KMS Key ARN to encrypt the Environment
      variables HTTP_LOGS_ENDPOINT, TOKEN. If kept empty, a new KMS Key ID will be
      created if CreateSecret is Yes.
    Type: String
  BackfillDays:
    AllowedPattern: .+
    Description: Enter the number of days for which logs should be collected. For
      eg, 2 means logs for last 2 days.
    Type: String
  CreateSecret:
    AllowedValues:
    - 'Yes'
    - 'No'
    Default: 'No'
    Description: Yes -> Encrypt the Provided Environment variables HTTP_LOGS_ENDPOINT,
      TOKEN using KMS and Secret Manager. No -> No encryption.
    Type: String
  DatabaseName:
    Default: sumoslack
    Description: DynamoDB Table Name. Use the table name to identify the Slack Workspace
      for which you are collecting logs. Do not use the same DataBase Name across
      multiple installations.
    Type: String
  EnableInfrequentChannels:
    AllowedValues:
    - true
    - false
    Default: false
    Description: True -> Enable dividing channels into frequent and infrequent based
      on the last message time. False -> Send all public channels messages.
    Type: String
  HttpLogsEndpoint:
    AllowedPattern: .+
    Description: Paste the URL for the HTTP Logs source.
    NoEcho: true
    Type: String
  Token:
    AllowedPattern: .+
    Description: Paste the TOKEN generated from Slack App.
    NoEcho: true
    Type: String
Resources:
  LambdaRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      Path: /
    Type: AWS::IAM::Role
  SecretPolicy:
    Condition: create_secret
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - secretsmanager:GetSecretValue
          Effect: Allow
          Resource:
            Ref: SumoLogicSecret
        - Action:
          - kms:Decrypt
          Effect: Allow
          Resource:
            Fn::If:
            - create_kms_key
            - Fn::GetAtt:
              - SumoLogicKMSKey
              - Arn
            - Ref: AwsKmsKeyARN
        Version: '2012-10-17'
      PolicyName: SecretManager-Policy
      Roles:
      - Ref: LambdaRole
    Type: AWS::IAM::Policy
  SlackFunction:
    Properties:
      CodeUri: s3://appdevstore/Slack/v1.1.2/a8ba6fb745371ef9617e510782743b5b
      Description: This function gets triggered perodically via CloudWatchEvents and
        fetches logs from Slack and ingest to SumoLogic
      Environment:
        Variables:
          BACKFILL_DAYS:
            Ref: BackfillDays
          DBNAME:
            Ref: DatabaseName
          DECRYPT_KEYS:
            Fn::If:
            - create_secret
            - 'true'
            - 'false'
          ENABLE_CONSOLE_LOG: 'false'
          ENABLE_INFREQUENT_CHANNELS:
            Ref: EnableInfrequentChannels
          ENVIRONMENT: aws
          HTTP_LOGS_ENDPOINT:
            Fn::If:
            - create_secret
            - Ref: SumoLogicSecret
            - Ref: HttpLogsEndpoint
          TOKEN:
            Fn::If:
            - create_secret
            - Ref: SumoLogicSecret
            - Ref: Token
      Events:
        ScheduleRule:
          Properties:
            Schedule: rate(10 minutes)
          Type: Schedule
      Handler: main.main
      Layers:
      - Fn::Sub: arn:aws:lambda:${AWS::Region}:956882708938:layer:Slack-deps:10
      MemorySize: 256
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Runtime: python3.7
      Timeout: 900
    Type: AWS::Serverless::Function
  SumoLogicKMSAlias:
    Condition: create_kms_key
    Properties:
      AliasName:
        Fn::Sub: alias/SumoLogic-Secret-${AWS::StackName}
      TargetKeyId:
        Ref: SumoLogicKMSKey
    Type: AWS::KMS::Alias
  SumoLogicKMSKey:
    Condition: create_kms_key
    Properties:
      Description:
        Fn::Sub: This is KMS Key Id used to encrypt and decrypt the Secret SumoLogic-Secret-${AWS::StackName}
          for CloudFormation Stack ${AWS::StackName}.
      EnableKeyRotation: true
      KeyPolicy:
        Id: key-default-1
        Statement:
        - Action: kms:*
          Effect: Allow
          Principal:
            AWS:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - :root
          Resource: '*'
          Sid: Enable IAM User Permissions
        Version: '2012-10-17'
    Type: AWS::KMS::Key
  SumoLogicSecret:
    Condition: create_secret
    Properties:
      Description:
        Fn::Sub: This is Secret Manager to Store Environment variables HTTP_LOGS_ENDPOINT,
          TOKEN for CloudFormation Stack ${AWS::StackName}.
      KmsKeyId:
        Fn::If:
        - create_kms_key
        - Fn::GetAtt:
          - SumoLogicKMSKey
          - Arn
        - Ref: AwsKmsKeyARN
      Name:
        Fn::Sub: SumoLogic-Secret-${AWS::StackName}
      SecretString:
        Fn::Sub: '{"HTTP_LOGS_ENDPOINT": "${HttpLogsEndpoint}", "TOKEN": "${Token}"}'
    Type: AWS::SecretsManager::Secret
Transform: AWS::Serverless-2016-10-31
